db.faultLogDescription.insert({ controllerType: "NGSC", code: 0, description: "BLANK_MSG", severity: "NONE" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 19, description: "PRIMING_MODE_MSG", severity: "NONE" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 24, description: "DRAIN_MODE_MSG", severity: "NONE" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 25, description: "DEMO_MODE_MSG", severity: "NONE" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 37, description: "STANDBY_MODE_MSG", severity: "NONE" })

db.faultLogDescription.insert({ controllerType: "NGSC", code: 18, description: "The cooler is ineffective", severity: "INFO" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 38, description: "Run Jets 1 to get temperature", severity: "INFO" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 39, description: "Test software installed", severity: "INFO" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 40, description: "Set the time", severity: "INFO" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 41, description: "INITIALIZING_MSG", severity: "INFO" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 46, description: "BATH_MODE_MSG", severity: "INFO" })

db.faultLogDescription.insert({ controllerType: "NGSC", code: 2, description: "Test the GFCI", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 3, description: "Change the filter", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 4, description: "Clean the filter", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 5, description: "Treat the wood", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 6, description: "Clean the cover", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 7, description: "Change the mineral cartridge", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 8, description: "Change the water", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 9, description: "Check the sanitizer", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 10, description: "Check the pH", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 43, description: "Change UV", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 47, description: "CHECK_OZONE_MSG", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 48, description: "SERVICE_CHECK_MSG", severity: "REMINDER" })

db.faultLogDescription.insert({ controllerType: "NGSC", code: 1, description: "Possible freezing condition", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 11, description: "The sanitizer is low", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 12, description: "The sanitizer is high", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 13, description: "The pH is low", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 14, description: "The pH is high", severity: "WARNING" })

db.faultLogDescription.insert({ controllerType: "NGSC", code: 15, description: "Sensors are out of sync", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 16, description: "The water flow is low", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 17, description: "The water flow has failed", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 20, description: "The clock has failed", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 21, description: "The settings have been reset", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 22, description: "Program memory failure", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 23, description: "Configuration error", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 36, description: "The GFCI test failed", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 42, description: "NO_VALVES_MSG", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 44, description: "J29", severity: "ERROR" })

db.faultLogDescription.insert({ controllerType: "NGSC", code: 26, description: "Sensors are out of sync", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 27, description: "The heater is dry", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 28, description: "The heater may be dry", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 29, description: "The water is too hot", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 30, description: "The heater is too hot", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 31, description: "Sensor A fault", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 32, description: "Sensor B fault", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 33, description: "Safety fault", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 34, description: "A pump may be stuck on", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 35, description: "Hot fault", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 45, description: "The water level is too low", severity: "FATAL" })
db.faultLogDescription.insert({ controllerType: "NGSC", code: 254, description: "Communications error", severity: "FATAL" })


db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 0, description: "No error or reminder to report", severity: "NONE" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 1, description: "Change Filter 1 (Outer/ProClarity)", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 2, description: "Drain Water", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 3, description: "Change CLEARRAY", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 4, description: "RTC Failure", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 5, description: "The system settings have been reset to their default values", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 6, description: "Checksum Failure", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 7, description: "Configuration Error", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 8, description: "A relay may be stuck closed", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 9, description: "The GFCI was tripped as a result of detecting a stuck relay", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 10, description: "Set Time", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 11, description: "Flow Switch Stuck Open", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 12, description: "Flow Switch Stuck Closed", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 13, description: "Water Sensor Shorted", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 14, description: "Water Sensor Open", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 15, description: "HiLimit Sensor Shorted", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 16, description: "HiLimit Sensor Open", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 17, description: "Ambient Sensor Shorted", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 18, description: "Ambient Sensor Open", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 19, description: "The ambient temperature is above 185 F", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 20, description: "The ambient temperature is above 194 F", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 21, description: "Change Filter 2 (Inner/ProClarity Depth)", severity: "REMINDER" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 22, description: "The system is in the Watchdog state", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 23, description: "The system is in the Watchdog Protect state", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 24, description: "Flow switch closed at startup", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 25, description: "Freeze protect in Flow state", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 26, description: "Water much cooler than set temperature", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 27, description: "Water is cold enough to potentially freeze", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 28, description: "Water is hot", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 29, description: "Water is hot", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 30, description: "Photo Sensor Short", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 31, description: "Photo Sensor Open", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 32, description: "Stereo unit is not communicating with pack", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 33, description: "WiFi module is not communicating with pack", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 34, description: "The GFCI did not trip", severity: "ERROR" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 253, description: "Registration Lockout", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 254, description: "Comm Error", severity: "WARNING" })
db.faultLogDescription.insert({ controllerType: "JACUZZI", code: 255, description: "All existing errors and reminders are suppressed", severity: "WARNING" })


